<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.qbicc.rt</groupId>
        <artifactId>qbicc-rt-parent</artifactId>
        <version>17.alpha.0.40</version>
    </parent>

    <artifactId>qbicc-rt-java.base</artifactId>

    <name>Qbicc Run Time: java.base</name>
    <description>The Qbicc builder for the java.base JDK module</description>

    <dependencies>
        <dependency>
            <groupId>org.qbicc</groupId>
            <artifactId>qbicc-runtime-bsd</artifactId>
        </dependency>
        <dependency>
            <groupId>org.qbicc</groupId>
            <artifactId>qbicc-runtime-gc-heap</artifactId>
        </dependency>
        <dependency>
            <groupId>org.qbicc</groupId>
            <artifactId>qbicc-runtime-linux</artifactId>
        </dependency>
        <dependency>
            <groupId>org.qbicc</groupId>
            <artifactId>qbicc-runtime-llvm</artifactId>
        </dependency>
        <dependency>
            <groupId>org.qbicc</groupId>
            <artifactId>qbicc-runtime-posix</artifactId>
        </dependency>
        <dependency>
            <groupId>org.qbicc</groupId>
            <artifactId>qbicc-runtime-main</artifactId>
        </dependency>
        <dependency>
            <groupId>org.qbicc</groupId>
            <artifactId>qbicc-runtime-zlib</artifactId>
        </dependency>
        <dependency>
            <groupId>org.qbicc.rt</groupId>
            <artifactId>qbicc-rt-annotation</artifactId>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>target/combined-sources</sourceDirectory>

        <plugins>
            <plugin>
                <groupId>${project.groupId}</groupId>
                <artifactId>qbicc-rt-openjdk-build-tools-maven-plugin</artifactId>
                <version>${project.version}</version>
                <executions>
                    <execution>
                        <id>gensrc-buffer</id>
                        <goals>
                            <goal>generate-buffers</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>gensrc-charset-coder</id>
                        <goals>
                            <goal>generate-charset-coder</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>gensrc-misc</id>
                        <goals>
                            <goal>generate-misc</goal>
                        </goals>
                        <configuration>
                            <vendor>qbicc community</vendor>
                            <vendorUrl>https://github.com/qbicc</vendorUrl>
                            <vendorUrlBug>https://github.com/qbicc/qbicc-class-library/issues</vendorUrlBug>
                            <vendorUrlVmBug>https://github.com/qbicc/qbicc/issues</vendorUrlVmBug>
                            <versionClassFileMajor>61</versionClassFileMajor>
                            <versionClassFileMinor>0</versionClassFileMinor>
                            <versionSpec>${maven.compiler.target}</versionSpec>
                        </configuration>
                    </execution>
                    <execution>
                        <id>gensrc-exceptions</id>
                        <goals>
                            <goal>generate-exceptions</goal>
                        </goals>
                        <configuration>
                            <scriptsDir>${project.basedir}/../openjdk/make/scripts</scriptsDir>
                            <basePath>${project.basedir}/../openjdk/src/java.base/share/classes/java/nio</basePath>
                            <outputDirectory>${project.build.directory}/generated-sources/exceptions/java/nio</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>gensrc-cldr</id>
                        <goals>
                            <goal>generate-cldr</goal>
                        </goals>
                        <configuration>
                            <base>${project.basedir}/../openjdk/make/data/cldr/common</base>
                            <baseLocales>en-US</baseLocales>
                            <output>${project.build.directory}/generated-sources/cldr</output>
                            <baseModule>true</baseModule>
                            <znTemplateFile>${project.basedir}/../openjdk/src/java.base/share/classes/java/time/format/ZoneName.java.template</znTemplateFile>
                            <tzDataDir>${project.basedir}/../openjdk/make/data/tzdata</tzDataDir>
                        </configuration>
                    </execution>
                    <execution>
                        <id>gensrc-currency</id>
                        <goals>
                            <goal>generate-currency</goal>
                        </goals>
                        <configuration>
                            <input>${project.basedir}/../openjdk/make/data/currency/CurrencyData.properties</input>
                            <output>${project.build.directory}/generated-sources/currency/java/util/currency.data</output>
                        </configuration>
                    </execution>
                    <execution>
                        <id>gensrc-security</id>
                        <goals>
                            <goal>generate-security</goal>
                        </goals>
                        <configuration>
                            <input>${project.basedir}/../openjdk/src/java.base/share/conf/security/java.security</input>
                            <output>${project.build.directory}/generated-sources/security/META-INF/java.home/conf/security/java.security</output>
                        </configuration>
                    </execution>
                    <execution>
                        <id>gensrc-tzdb</id>
                        <goals>
                            <goal>generate-tzdb</goal>
                        </goals>
                        <configuration>
                            <sourceDir>${project.basedir}/../openjdk/make/data/tzdata</sourceDir>
                            <tzFiles>
                                <tzFile>africa</tzFile>
                                <tzFile>antarctica</tzFile>
                                <tzFile>asia</tzFile>
                                <tzFile>australasia</tzFile>
                                <tzFile>europe</tzFile>
                                <tzFile>northamerica</tzFile>
                                <tzFile>southamerica</tzFile>
                                <tzFile>backward</tzFile>
                                <tzFile>etcetera</tzFile>
                                <tzFile>gmt</tzFile>
                                <tzFile>jdk11_backward</tzFile>
                            </tzFiles>
                        </configuration>
                    </execution>
                    <execution>
                        <id>gensrc-locale-data</id>
                        <goals>
                            <goal>generate-locale-data</goal>
                        </goals>
                        <configuration>
                            <templateFile>${project.basedir}/../openjdk/src/java.base/share/classes/sun/util/locale/provider/LocaleDataMetaInfo-XLocales.java.template</templateFile>
                            <baseLocaleDataFile>${project.build.directory}/generated-sources/locales/sun/util/locale/provider/BaseLocaleDataMetaInfo.java</baseLocaleDataFile>
                            <baseLocales>
                                <baseLocale>en</baseLocale>
                                <baseLocale>en-US</baseLocale>
                            </baseLocales>
                            <nonBaseLocales>
                                <!-- "Locales that don't have any resource files should be included here." -->
                                <!-- See openjdk/make/gensrc/GensrcLocaleData.gmk -->
                                <nonBaseLocale>ja-JP-JP</nonBaseLocale>
                                <nonBaseLocale>th-TH-TH</nonBaseLocale>
                            </nonBaseLocales>
                            <sourcePaths>
                                <sourcePath>${project.basedir}/../openjdk/src/java.base/share/classes/sun/text/resources</sourcePath>
                                <sourcePath>${project.basedir}/../openjdk/src/java.base/share/classes/sun/util/resources</sourcePath>
                            </sourcePaths>
                        </configuration>
                    </execution>
                    <execution>
                        <id>gensrc-character-data</id>
                        <goals>
                            <goal>generate-character-data</goal>
                        </goals>
                        <configuration>
                            <characterData>${project.basedir}/../openjdk/make/data/characterdata</characterData>
                            <unicodeData>${project.basedir}/../openjdk/make/data/unicodedata</unicodeData>
                            <output>${project.build.directory}/generated-sources/character-data</output>
                        </configuration>
                    </execution>
                    <execution>
                        <id>gensrc-var-handles</id>
                        <goals>
                            <goal>generate-var-handles</goal>
                        </goals>
                        <configuration>
                            <varHandleTemplateFile>${project.basedir}/src/main/java/java/lang/invoke/X-VarHandle.java.template</varHandleTemplateFile>
                            <varHandleByteArrayViewTemplateFile>${project.basedir}/src/main/java/java/lang/invoke/X-VarHandleByteArrayView.java.template</varHandleByteArrayViewTemplateFile>
                            <varHandleMemoryAccessHelperTemplateFile>${project.basedir}/src/main/java/java/lang/invoke/X-VarHandleMemoryAccess.java.template</varHandleMemoryAccessHelperTemplateFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>gensrc-charset-mapping</id>
                        <goals>
                            <goal>generate-charset-mapping</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/generated-sources/charset-mapping/sun/nio/cs</outputDirectory>
                            <charsetTemplates>
                                <charsetTemplate>${project.basedir}/../openjdk/make/data/charsetmapping/SingleByte-X.java.template</charsetTemplate>
                                <charsetTemplate>${project.basedir}/../openjdk/make/data/charsetmapping/DoubleByte-X.java.template</charsetTemplate>
                            </charsetTemplates>
                            <javaTemplates>
                                <javaTemplate>${project.basedir}/../openjdk/src/java.base/share/classes/sun/nio/cs/StandardCharsets.java.template</javaTemplate>
                            </javaTemplates>
                            <copyrightHeader>${project.basedir}/../openjdk/make/jdk/src/classes/build/tools/charsetmapping</copyrightHeader>
                            <extSrcDirectory>${project.basedir}/../openjdk/src/jdk.charsets/share/classes/sun/nio/cs/ext</extSrcDirectory>
                            <dataDirectory>${project.basedir}/../openjdk/make/data/charsetmapping</dataDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>gensrc-module-info</id>
                        <goals>
                            <goal>generate-module-info</goal>
                        </goals>
                        <configuration>
                            <output>${project.build.directory}/generated-sources/module-info/module-info.java</output>
                            <sourceFile>${project.basedir}/../openjdk/src/java.base/share/classes/module-info.java</sourceFile>
                            <moduleFiles>
                                <moduleFile>${project.basedir}/src/main/java/module-info.java.extra</moduleFile>
                                <moduleFile>${project.basedir}/../openjdk/src/java.base/unix/classes/module-info.java.extra</moduleFile>
                                <moduleFile>${project.basedir}/../openjdk/src/java.base/windows/classes/module-info.java.extra</moduleFile>
                            </moduleFiles>
                            <openJdkSrc>${project.basedir}/../openjdk/src</openJdkSrc>
                        </configuration>
                    </execution>
                    <execution>
                        <id>gensrc-module-mapper</id>
                        <goals>
                            <goal>generate-module-loader-map</goal>
                        </goals>
                        <configuration>
                            <bootModules>
                                <bootModule>java.base</bootModule>
                                <bootModule>java.logging</bootModule>
                                <bootModule>java.management</bootModule>
                                <bootModule>java.naming</bootModule>
                                <bootModule>java.security.sasl</bootModule>
                                <bootModule>java.sql</bootModule>
                                <bootModule>java.transaction.xa</bootModule>
                                <bootModule>java.xml</bootModule>
                                <bootModule>jdk.net</bootModule>
                                <bootModule>jdk.unsupported</bootModule>
                            </bootModules>
                            <platformModules>
                            </platformModules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>gensrc-locale-equiv-maps</id>
                        <goals>
                            <goal>generate-locale-equiv-maps</goal>
                        </goals>
                        <configuration>
                            <languageSubtagRegistry>${project.basedir}/../openjdk/make/data/lsrdata/language-subtag-registry.txt</languageSubtagRegistry>
                            <outputFile>${project.build.directory}/generated-sources/lsr/sun/util/locale/LocaleEquivalentMaps.java</outputFile>
                            <copyrightYear>2022</copyrightYear>
                        </configuration>
                    </execution>
                    <execution>
                        <id>gensrc-scoped-memory-access</id>
                        <goals>
                            <goal>generate-scoped-memory-access</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>gensrc-emoji-data</id>
                        <goals>
                            <goal>generate-emoji-data</goal>
                        </goals>
                    </execution>

                    <!-- Replace the normal JAR plugin -->
                    <execution>
                        <id>qbicc-jar</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>

                </executions>
            </plugin>

            <!-- Copy our sources in preferred order to a single source path -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-conf</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}/META-INF/java.home/conf</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/../openjdk/src/java.base/share/conf</directory>
                                    <excludes>
                                        <exclude>security/java.security</exclude> <!-- Template file that we generate below -->
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/combined-sources</outputDirectory>
                            <overwrite>true</overwrite>
                            <resources>
                                <!-- Order these in *reverse preference*; last write is best write -->
                                <!-- share is least significant  -->
                                <resource>
                                    <directory>${project.basedir}/../openjdk/src/java.base/share/classes</directory>
                                    <excludes>
                                        <exclude>module-info.java</exclude>
                                    </excludes>
                                </resource>

                                <!-- OS-specific is next, alpha by OS name -->
                                <resource>
                                    <directory>${project.basedir}/../openjdk/src/java.base/aix/classes</directory>
                                </resource>
                                <resource>
                                    <directory>${project.basedir}/../openjdk/src/java.base/linux/classes</directory>
                                </resource>
                                <resource>
                                    <directory>${project.basedir}/../openjdk/src/java.base/macosx/classes</directory>
                                </resource>
                                <!-- skip solaris -->
                                <resource>
                                    <directory>${project.basedir}/../openjdk/src/java.base/unix/classes</directory>
                                </resource>
                                <resource>
                                    <directory>${project.basedir}/../openjdk/src/java.base/windows/classes</directory>
                                </resource>

                                <!-- gen sources are next, alpha by name -->
                                <resource>
                                    <directory>${project.build.directory}/generated-sources/character-data</directory>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/generated-sources/charset-mapping</directory>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/generated-sources/cldr</directory>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/generated-sources/currency</directory>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/generated-sources/exceptions</directory>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/generated-sources/locales</directory>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/generated-sources/lsr</directory>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/generated-sources/misc</directory>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/generated-sources/module-info</directory>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/generated-sources/module-loader-map</directory>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/generated-sources/spp</directory>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/generated-sources/security</directory>
                                </resource>

                                <!-- our sources take precedence -->
                                <resource>
                                    <directory>${project.basedir}/src/main/java</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-base-resources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.sourceDirectory}</directory>
                                    <excludes>
                                        <exclude>**/*.java</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <compileSourceRoots>
                                <compileSourceRoot>${project.build.directory}/combined-sources</compileSourceRoot>
                            </compileSourceRoots>
                            <compilerArgs>
                                <arg>--system</arg>
                                <arg>none</arg>
                                <arg>--add-reads</arg>
                                <arg>java.base=org.qbicc.runtime.posix,ALL-UNNAMED</arg>
                                <arg>--add-reads</arg>
                                <arg>org.qbicc.runtime.posix=ALL-UNNAMED</arg>
                                <arg>-XDstringConcat=inline</arg>
                            </compilerArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- Disable Maven JAR plugin -->
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-jar</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>release</id>
            <activation>
                <property>
                    <name>release</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <configuration>
                                    <sourcepath>${project.build.directory}/combined-sources</sourcepath>
                                    <additionalOptions>
                                        <additionalOption>--add-reads</additionalOption>
                                        <additionalOption>java.base=ALL-UNNAMED</additionalOption>
                                    </additionalOptions>
                                    <failOnError>false</failOnError>
                                    <failOnWarnings>false</failOnWarnings>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <configuration>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
