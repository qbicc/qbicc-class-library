name: qbicc-class-libraries Continuous Integration
env:
  CLASSLIB_VERSION: 17.alpha.0.32
  QBICC_VERSION: 0.38.0
on:
  push:
    paths-ignore:
      - '**.md'
      - '**.adoc'
    branches: [ 17.x ]
  pull_request:
    paths-ignore:
      - '**.md'
      - '**.adoc'
    branches: [ 17.x ]
    types: [ opened, synchronize, reopened ]
jobs:
  build-matrix:
    name: "Matrix build"
    strategy:
      fail-fast: false
      matrix:
        llvm-version: ["12", "13", "14"]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    steps:
      - name: Install LLVM
        uses: KyleMayes/install-llvm-action@v1.5.3
        with:
          version: ${{ matrix.llvm-version }}
          directory: ${{ runner.temp }}/llvm-install

      - name: Install `libgcc` (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install -y libgcc-11-dev

      - name: Install libunwind (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install -y libunwind-dev

      - name: Install OpenJDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Clone project
        uses: actions/checkout@v2
        with:
          path: qbicc-class-library
          submodules: recursive

      - name: Build class libraries
        run: |
          mvn --batch-mode install
        working-directory: qbicc-class-library

      - name: Clone qbicc
        uses: actions/checkout@v2
        with:
          repository: qbicc/qbicc
          ref: ${{ env.QBICC_VERSION }}
          path: qbicc

      - name: Run qbicc tests (Linux)
        if: matrix.os == 'ubuntu-latest'
        env:
            LIBRARY_PATH: /usr/lib/gcc/x86_64-linux-gnu/11:/usr/lib/x86_64-linux-gnu
            CC: clang
        run: |
          mvn --batch-mode install -Dversion.qbicc.classlib=${{ env.CLASSLIB_VERSION }} -Dqbicc.test.clean-target=true
        working-directory: qbicc

      - name: Run qbicc tests (Mac OS)
        if: matrix.os == 'macos-latest'
        env:
            LIBRARY_PATH: $(brew --prefix gcc)/lib/gcc/11
            CC: gcc
        run: |
          mvn --batch-mode install -Dversion.qbicc.classlib=${{ env.CLASSLIB_VERSION }} -Dqbicc.test.clean-target=true
        working-directory: qbicc

      - name: Prepare failure archive (if maven failed)
        if: failure()
        shell: bash
        run: find . -type d -name '*-reports' -o -name "*-logs" | tar -czf test-reports.tgz -T -

      - name: Upload failure Archive (if maven failed)
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-reports
          path: 'test-reports.tgz'
